(window.webpackJsonp=window.webpackJsonp||[]).push([[3],{107:function(e,t,a){"use strict";a.d(t,"a",(function(){return d})),a.d(t,"b",(function(){return h}));var n=a(0),l=a.n(n);function r(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function o(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function c(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?o(Object(a),!0).forEach((function(t){r(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):o(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function i(e,t){if(null==e)return{};var a,n,l=function(e,t){if(null==e)return{};var a,n,l={},r=Object.keys(e);for(n=0;n<r.length;n++)a=r[n],t.indexOf(a)>=0||(l[a]=e[a]);return l}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(n=0;n<r.length;n++)a=r[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(l[a]=e[a])}return l}var s=l.a.createContext({}),u=function(e){var t=l.a.useContext(s),a=t;return e&&(a="function"==typeof e?e(t):c(c({},t),e)),a},d=function(e){var t=u(e.components);return l.a.createElement(s.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return l.a.createElement(l.a.Fragment,{},t)}},b=l.a.forwardRef((function(e,t){var a=e.components,n=e.mdxType,r=e.originalType,o=e.parentName,s=i(e,["components","mdxType","originalType","parentName"]),d=u(a),b=n,h=d["".concat(o,".").concat(b)]||d[b]||p[b]||r;return a?l.a.createElement(h,c(c({ref:t},s),{},{components:a})):l.a.createElement(h,c({ref:t},s))}));function h(e,t){var a=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var r=a.length,o=new Array(r);o[0]=b;var c={};for(var i in t)hasOwnProperty.call(t,i)&&(c[i]=t[i]);c.originalType=e,c.mdxType="string"==typeof e?e:n,o[1]=c;for(var s=2;s<r;s++)o[s]=a[s];return l.a.createElement.apply(null,o)}return l.a.createElement.apply(null,a)}b.displayName="MDXCreateElement"},62:function(e,t,a){"use strict";a.r(t),a.d(t,"frontMatter",(function(){return o})),a.d(t,"metadata",(function(){return c})),a.d(t,"rightToc",(function(){return i})),a.d(t,"default",(function(){return u}));var n=a(3),l=a(7),r=(a(0),a(107)),o={id:"vault-with-keycloak",title:"Vault authentication with KeyCloak"},c={unversionedId:"guides/local/vault-with-keycloak",id:"version-0.8.x/guides/local/vault-with-keycloak",isDocsHomePage:!1,title:"Vault authentication with KeyCloak",description:"This guide shows the Vault with KeyCloak authentication in local k3d environment and some tools are prerequisites for run:",source:"@site/versioned_docs/version-0.8.x/guides/local/vault-with-keycloak.md",slug:"/guides/local/vault-with-keycloak",permalink:"/vkpr-docs/docs/guides/local/vault-with-keycloak",editUrl:"https://github.com/vertigobr/vkpr/edit/docs/versioned_docs/version-0.8.x/guides/local/vault-with-keycloak.md",version:"0.8.x",sidebar:"version-0.8.x/docs",previous:{title:"Grafana authentication with KeyCloak",permalink:"/vkpr-docs/docs/guides/local/grafana-with-keycloak"},next:{title:"VKPR installation on Amazon EKS",permalink:"/vkpr-docs/docs/guides/eks/installation"}},i=[{value:"Installation and setup VKPR",id:"installation-and-setup-vkpr",children:[{value:"Makefile mode",id:"makefile-mode",children:[]},{value:"Manual mode",id:"manual-mode",children:[]}]},{value:"Access Vault and KeyCloak",id:"access-vault-and-keycloak",children:[]},{value:"Destroy cluster",id:"destroy-cluster",children:[]}],s={rightToc:i};function u(e){var t=e.components,a=Object(l.a)(e,["components"]);return Object(r.b)("wrapper",Object(n.a)({},s,a,{components:t,mdxType:"MDXLayout"}),Object(r.b)("p",null,"This guide shows the Vault with KeyCloak authentication in local k3d environment and some tools are prerequisites for run:"),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},Object(r.b)("a",Object(n.a)({parentName:"li"},{href:"https://k3d.io/"}),"k3d")," >= 3.3.0"),Object(r.b)("li",{parentName:"ul"},Object(r.b)("a",Object(n.a)({parentName:"li"},{href:"https://helm.sh/docs/intro/install/#helm"}),"Helm")," >= 3.0.0")),Object(r.b)("h2",{id:"installation-and-setup-vkpr"},"Installation and setup VKPR"),Object(r.b)("p",null,"The installation and configuration in this guide can be done in two ways, via ",Object(r.b)("a",Object(n.a)({parentName:"p"},{href:"#makefile-mode"}),"makefile")," or ",Object(r.b)("a",Object(n.a)({parentName:"p"},{href:"#manual-mode"}),"manual"),". You will need to create two configuration files in this guide the ",Object(r.b)("a",Object(n.a)({parentName:"p"},{href:"https://github.com/vertigobr/vkpr/blob/master/examples/local/values-local-vault-http.yaml"}),"values file")," for VKPR and ",Object(r.b)("a",Object(n.a)({parentName:"p"},{href:"https://github.com/vertigobr/vkpr/blob/master/examples/keycloak/realm.json"}),"realm file")," to KeyCloak."),Object(r.b)("h3",{id:"makefile-mode"},"Makefile mode"),Object(r.b)("div",{className:"admonition admonition-info alert alert--info"},Object(r.b)("div",Object(n.a)({parentName:"div"},{className:"admonition-heading"}),Object(r.b)("h5",{parentName:"div"},Object(r.b)("span",Object(n.a)({parentName:"h5"},{className:"admonition-icon"}),Object(r.b)("svg",Object(n.a)({parentName:"span"},{xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"}),Object(r.b)("path",Object(n.a)({parentName:"svg"},{fillRule:"evenodd",d:"M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"})))),"info")),Object(r.b)("div",Object(n.a)({parentName:"div"},{className:"admonition-content"}),Object(r.b)("p",{parentName:"div"},"In this way the installation of the makefile is required."))),Object(r.b)("p",null,"Makefile used in this guide (update the ",Object(r.b)("inlineCode",{parentName:"p"},"VALUES_FILE")," or ",Object(r.b)("inlineCode",{parentName:"p"},"REALM_FILE")," values):"),Object(r.b)("pre",null,Object(r.b)("code",Object(n.a)({parentName:"pre"},{className:"language-makefile",metastring:'title="makefile"',title:'"makefile"'}),'# Create a local k3d cluster\nk3d_create:\n    k3d cluster create vkpr-local -p "8080:80@loadbalancer" -p "8443:443@loadbalancer" --k3s-server-arg "--no-deploy=traefik"\n\n# Create a local k3d cluster\nk3d_delete:\n    k3d cluster delete vkpr-local\n\n# Setup VKPR repository in Helm\nsetup_vkpr:\n    helm repo add vertigo https://charts.vertigo.com.br\n    helm repo update\n\n# Installation and setup VKPR\ninstall_vkpr:\n    @echo "KUBECONFIG=$(KUBECONFIG)"\n    kubectl create secret generic vkpr-realm-secret --from-file=<REALM_FILE>\n    helm upgrade -i -f <VALUES_FILE> vkpr vertigo/vkpr\n\n# Add hosts\nadd_hosts:\n    echo "Detecting LoadBalancer external IP"\n    export LB_IP=""; \\\n    while [ -z "$${LB_IP}" ]; do \\\n        export LB_IP=$$(kubectl get svc vkpr-ingress-nginx-controller -o jsonpath="{.status.loadBalancer.ingress[*].ip}"); \\\n        if [ -z "$${LB_IP}" ]; then \\\n            echo "Waiting for LoadBalancer external IP..."; \\\n            sleep 3; \\\n        else \\\n            echo "LoadBalancer external IP: $${LB_IP}"; \\\n            echo "Hacking into /etc/hosts, gonna need sudo, please."; \\\n            if grep -q "vkpr-keycloak-http" /etc/hosts; then \\\n                sudo sed "s/.*vkpr-keycloak-http.*/$${LB_IP} whoami.localdomain vkpr-vault.default.svc vkpr-keycloak-http.default.svc/g" -i /etc/hosts; \\\n            else \\\n                sudo sh -c "echo \'$${LB_IP} whoami.localdomain vkpr-vault.default.svc vkpr-keycloak-http.default.svc\' >> /etc/hosts"; \\\n            fi; \\\n        fi; \\\n    done\n\n# Vault init\nvault_init:\n    kubectl exec vkpr-vault-0 -- vault operator init -key-shares=1 -key-threshold=1 -format=json > init-keys.json\n    kubectl exec vkpr-vault-0 -- vault operator unseal $$(cat init-keys.json | jq -r ".unseal_keys_b64[]")\n\n# Vault setup\nVAULT_ADDR := http://vkpr-vault.default.svc\nvault_setup:\n    vault login $$(cat init-keys.json | jq -r ".root_token")\n    echo \'path "/secret/*" { capabilities = ["read", "list"] }\' | vault policy write reader -\n    vault auth enable oidc\n    vault write auth/oidc/config \\\n        oidc_discovery_url="http://vkpr-keycloak-http.default.svc/auth/realms/vkpr" \\\n        oidc_client_id="oidc-demo" \\\n        oidc_client_secret="60e50da1-b492-4995-9574-763fa285456c" \\\n        default_role="reader"\n    vault write auth/oidc/role/reader \\\n        bound_audiences="oidc-demo" \\\n        allowed_redirect_uris="http://vkpr-vault.default.svc/ui/vault/auth/oidc/oidc/callback" \\\n        allowed_redirect_uris="http://localhost:8250/oidc/callback" \\\n        user_claim="sub" policies="reader"\n')),Object(r.b)("p",null,"Before installing VKPR need to create a local cluster with k3d, run:"),Object(r.b)("pre",null,Object(r.b)("code",Object(n.a)({parentName:"pre"},{className:"language-shell"}),"make k3d_create\n")),Object(r.b)("p",null,"To configure VKPR in Helm, run:"),Object(r.b)("pre",null,Object(r.b)("code",Object(n.a)({parentName:"pre"},{className:"language-shell"}),"make setup_vkpr\n")),Object(r.b)("p",null,"To install VKPR, run:"),Object(r.b)("pre",null,Object(r.b)("code",Object(n.a)({parentName:"pre"},{className:"language-shell"}),"make install_vkpr\n")),Object(r.b)("p",null,"To access Vault and KeyCloak it is necessary to add some custom domains to ",Object(r.b)("inlineCode",{parentName:"p"},"/etc/hosts"),", execute:"),Object(r.b)("pre",null,Object(r.b)("code",Object(n.a)({parentName:"pre"},{className:"language-shell"}),"make add_hosts\n")),Object(r.b)("p",null,"To configure the vault, run:"),Object(r.b)("pre",null,Object(r.b)("code",Object(n.a)({parentName:"pre"},{className:"language-shell"}),"make vault_init\n\nmake vault_setup\n")),Object(r.b)("p",null,"Finally the guide go to the ",Object(r.b)("a",Object(n.a)({parentName:"p"},{href:"#access-vault-and-keycloak"}),"next section")," to see the credentials of Vault and KeyCloak."),Object(r.b)("h3",{id:"manual-mode"},"Manual mode"),Object(r.b)("p",null,"To start you need to create a local k3d cluster, you need to run:"),Object(r.b)("pre",null,Object(r.b)("code",Object(n.a)({parentName:"pre"},{className:"language-shell"}),'k3d cluster create vkpr-local \\\n  -p "8080:80@loadbalancer" \\\n  -p "8443:443@loadbalancer" \\\n  --k3s-server-arg "--no-deploy=traefik"\n')),Object(r.b)("p",null,"K3d by default installs Traefik as a load balancer, above command creates a k3d cluster without Traefik because we will use VKPR's NGINX Ingress Controller."),Object(r.b)("p",null,"Before installation Helm needs to know the VKPR repository, run:"),Object(r.b)("pre",null,Object(r.b)("code",Object(n.a)({parentName:"pre"},{className:"language-shell"}),"# Add repo chart\nhelm repo add vertigo https://charts.vertigo.com.br\n\n# Update repo\nhelm repo update\n")),Object(r.b)("p",null,"Then install and configure VKPR running (update the ",Object(r.b)("inlineCode",{parentName:"p"},"VALUES_FILE")," or ",Object(r.b)("inlineCode",{parentName:"p"},"REALM_FILE")," values):"),Object(r.b)("pre",null,Object(r.b)("code",Object(n.a)({parentName:"pre"},{className:"language-shell"}),"# Create secret\nkubectl create secret generic vkpr-realm-secret --from-file=<REALM_FILE>\n\n# Install VKPR\nhelm upgrade -i -f <VALUES_FILE> vkpr vertigo/vkpr\n")),Object(r.b)("p",null,"To access Vault and KeyCloak it is necessary to add some custom domains to ",Object(r.b)("inlineCode",{parentName:"p"},"/etc/hosts"),". First get the external ip of nginx and then edit the hosts file (update ",Object(r.b)("inlineCode",{parentName:"p"},"LOAD_BALANCER_IP")," value), run:"),Object(r.b)("pre",null,Object(r.b)("code",Object(n.a)({parentName:"pre"},{className:"language-shell"}),"# Get external ip from nginx\nkubectl get service vkpr-ingress-nginx-controller\n\n# Edit hosts file\nsudo sh -c \"echo '<LOAD_BALANCER_IP> whoami.localdomain vkpr-vault.default.svc vkpr-keycloak-http.default.svc' >> /etc/hosts\"\n")),Object(r.b)("p",null,"Basic configuration is required for the vault to work, run:"),Object(r.b)("pre",null,Object(r.b)("code",Object(n.a)({parentName:"pre"},{className:"language-shell"}),'# Vault init\nkubectl exec vkpr-vault-0 -- vault operator init -key-shares=1 -key-threshold=1 -format=json > init-keys.json\n\n# Vault unseal\nkubectl exec vkpr-vault-0 -- vault operator unseal $$(cat init-keys.json | jq -r ".unseal_keys_b64[]")\n')),Object(r.b)("p",null,"Then it is necessary to configure the Vault oidc with KeyCloak, run:"),Object(r.b)("pre",null,Object(r.b)("code",Object(n.a)({parentName:"pre"},{className:"language-shell"}),'vault login $$(cat init-keys.json | jq -r ".root_token")\n\necho \'path "/secret/*" { capabilities = ["read", "list"] }\' | vault policy write reader -\n\nvault auth enable oidc\n\nvault write auth/oidc/config \\\n    oidc_discovery_url="http://vkpr-keycloak-http.default.svc/auth/realms/vkpr" \\\n    oidc_client_id="oidc-demo" \\\n    oidc_client_secret="60e50da1-b492-4995-9574-763fa285456c" \\\n    default_role="reader"\n\nvault write auth/oidc/role/reader \\\n    bound_audiences="oidc-demo" \\\n    allowed_redirect_uris="http://vkpr-vault.default.svc/ui/vault/auth/oidc/oidc/callback" \\\n    allowed_redirect_uris="http://localhost:8250/oidc/callback" \\\n    user_claim="sub" policies="reader"\n')),Object(r.b)("p",null,"Finally the guide go to the ",Object(r.b)("a",Object(n.a)({parentName:"p"},{href:"#access-vault-and-keycloak"}),"next section")," to see the credentials of Vault and KeyCloak."),Object(r.b)("h2",{id:"access-vault-and-keycloak"},"Access Vault and KeyCloak"),Object(r.b)("p",null,"To access the Vault with KeyCloak authentication use the following credentials:"),Object(r.b)("pre",null,Object(r.b)("code",Object(n.a)({parentName:"pre"},{className:"language-yaml"}),"url: http://vkpr-vault.default.svc\nusername: user\npassword: password\n")),Object(r.b)("p",null,"To access the KeyCloak administration console, use:"),Object(r.b)("pre",null,Object(r.b)("code",Object(n.a)({parentName:"pre"},{className:"language-yaml"}),"url: http://vkpr-keycloak-http.default.svc\nusername: admin\npassword: vkpr1234\n")),Object(r.b)("h2",{id:"destroy-cluster"},"Destroy cluster"),Object(r.b)("p",null,"After finishing the guide, destroy cluster k3d running:"),Object(r.b)("pre",null,Object(r.b)("code",Object(n.a)({parentName:"pre"},{className:"language-shell"}),"# Makefile mode\nmake k3d_delete\n\n# Manual mode\nk3d cluster delete vkpr-local\n")))}u.isMDXComponent=!0}}]);